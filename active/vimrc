set nocompatible               " be iMproved


" Auto-install vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif


call plug#begin('~/.vim/plugged')

"Plug 'powerline/powerline'
Plug 'Spaceghost/vim-matchit'
Plug 'altercation/vim-colors-solarized'
Plug 'bling/vim-airline'
Plug 'fatih/vim-go'
Plug 'mattboehm/vim-unstack'
Plug 'junegunn/vim-easy-align'
Plug 'tpope/vim-fugitive'
Plug 'preservim/nerdcommenter'
Plug 'preservim/nerdtree'
Plug 'mtth/scratch.vim'
Plug 'tpope/vim-surround'
Plug 'preservim/tagbar'
Plug 'tpope/vim-unimpaired'
Plug 'vim-syntastic/Syntastic'

call plug#end()

syntax enable
set background=dark
let g:solarized_termcolors=256
colorscheme solarized


runtime macros/matchit.vim

autocmd FileType python setlocal expandtab
autocmd FileType java,c setlocal cindent
autocmd FileType text setlocal tw=70

let mapleader=","
let g:airline_powerline_fonts = 1

set confirm
set autoindent
set copyindent
set showmatch
set hidden

set paste
set showmode
set shiftwidth=4
set shiftround
set tabstop=4
set expandtab
set smarttab
set scrolloff=3

set incsearch
set ignorecase
set smartcase

set wildignore=*.o,*.obj,*.bak,*.exe,*.class
set wildmenu
set wildmode=list:longest
set showcmd

set nobackup
set noswapfile
set directory=~/.vim/.tmp,~/tmp,/tmp

set title
set visualbell
set noerrorbells
set cursorline

set undofile
set undodir=~/.vim/.undo,~/tmp,/tmp

" http://got-ravings.blogspot.co.uk/2008/08/vim-pr0n-making-statuslines-that-own.html
"set statusline=%t\ [%{strlen(&fenc)?&fenc:'none'},%{&ff}]%h%m%r%y%=%c,%l/%L\ %P
set laststatus=2
let g:airline_powerline_fonts = 1

" Remap j and k to act as expected when used on long, wrapped, lines
nnoremap j gj
nnoremap k gk

" Quick yanking to the end of the line
nnoremap Y y$

map <F2> w
map <silent> <F3> :bn<CR>
map <silent> <F4> :tabn<CR>
map <silent> <F6> :cn<CR>
map <silent> <F7> :cp<CR>

nmap <C-n> :bnext<CR>
nmap <C-p> :bprev<CR>

" toggle nerdtree
nmap <leader>t :NERDTreeToggle<CR>
nmap <leader>T :TagbarToggle<CR>

"toggle line numbers
nmap <leader>l :setlocal number!<CR>
nmap <leader>L :set relativenumber!<CR>

"toggle paste mode
nmap <leader>o :set paste!<CR>

cmap w!! w !sudo tee % >/dev/null<CR>:e!<CR><CR>

set mps+=':'
set mps+=<:>

nnoremap Q gqap
vnoremap Q gq

" visual rename
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>

" Strip all trailing whitespace from a file, using ,W
nnoremap <leader>W :%s/\s\+$//<CR>:let @/=''<CR>

" Quote words under cursor
nnoremap <leader>" viW<esc>a"<esc>gvo<esc>i"<esc>gvo<esc>3l
nnoremap <leader>' viW<esc>a'<esc>gvo<esc>i'<esc>gvo<esc>3l

" Quote current selection
" TODO: This only works for selections that are created "forwardly"
vnoremap <leader>" <esc>a"<esc>gvo<esc>i"<esc>gvo<esc>ll
vnoremap <leader>' <esc>a'<esc>gvo<esc>i'<esc>gvo<esc>ll

" Select pasted text
nnoremap <leader>v V`]
